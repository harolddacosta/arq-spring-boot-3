<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.assentsoftware</groupId>
  <artifactId>spring-boot-parent</artifactId>
  <version>${revision}</version>
  <packaging>pom</packaging>
  <name>arq-spring-boot-3</name>

  <modules>
    <module>fitness-rest-bom</module>
    <module>fitness-rest-core</module>
    <module>fitness-boot-starter-rest-components</module>
    <module>fitness-boot-starter-openapi</module>
    <module>fitness-boot-starter-externalized-properties</module>
    <module>fitness-boot-starter-security-oauth2-test</module>
    <module>fitness-boot-starter-security-oauth2</module>
    <module>fitness-boot-starter-jpa-postgresql</module>
    <module>fitness-boot-starter-logging-support</module>
    <module>fitness-boot-starter-cloud-support</module>
  </modules>

  <scm>
    <connection>scm:git:https://github.com/EdminioPerez/arq-spring-boot-3.git</connection>
    <tag>HEAD</tag>
    <url>https://github.com/EdminioPerez/arq-spring-boot-3.git</url>
  </scm>

  <distributionManagement>
    <repository>
      <id>reposilite-releases</id>
      <name>releases</name>
      <url>https://assentsoftware.tplinkdns.com/reposilite/releases</url>
    </repository>
    <snapshotRepository>
      <id>reposilite-snapshots</id>
      <name>snapshots</name>
      <url>https://assentsoftware.tplinkdns.com/reposilite/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <properties>
    <revision>3.1.0-SNAPSHOT</revision>

    <java.version>17</java.version>

    <spring-boot.version>3.1.5</spring-boot.version>
    <spring-cloud.version>2022.0.4</spring-cloud.version>

    <commons-beanutils.version>1.9.4</commons-beanutils.version>
    <embedded-postgresql.version>2.3.2</embedded-postgresql.version>
    <hibernate.version>6.2.13.Final</hibernate.version>
    <h2.version>2.2.224</h2.version>
    <hypersistence-utils-hibernate-62.version>3.4.3</hypersistence-utils-hibernate-62.version>
    <jackson-databind-nullable.version>0.2.6</jackson-databind-nullable.version>
    <javafaker.version>1.0.2</javafaker.version>
    <javasimon.version>4.2.0</javasimon.version>
    <jboss-threads.version>3.5.0.Final</jboss-threads.version>
    <jose4j.version>0.9.3</jose4j.version>
    <logbook.version>3.0.0</logbook.version>
    <lombok.version>1.18.26</lombok.version>
    <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
    <logstash-logback-encoder.version>7.0.1</logstash-logback-encoder.version>
    <mapstruct.version>1.5.3.Final</mapstruct.version>
    <poi.version>5.2.3</poi.version>
    <problem-spring-web.version>0.29.1</problem-spring-web.version>
    <springdoc-openapi.version>2.1.0</springdoc-openapi.version>
    <snakeyaml.version>2.2</snakeyaml.version>
    <swagger-annotations.version>2.2.8</swagger-annotations.version>
    <xnio.version>3.8.9.Final</xnio.version>
    <problem.version>0.27.1</problem.version>
    <meanbean.version>3.0.0-M9</meanbean.version>

    <artifactregistry-maven-wagon.version>2.1.5</artifactregistry-maven-wagon.version>
    <build-helper-maven-plugin.version>3.3.0</build-helper-maven-plugin.version>
    <flatten-maven-plugin.version>1.2.7</flatten-maven-plugin.version>
    <frontend-maven-plugin.version>1.12.1</frontend-maven-plugin.version>
    <hibernate3-maven-plugin.version>2.2</hibernate3-maven-plugin.version>
    <jacoco-maven-plugin.version>0.8.9</jacoco-maven-plugin.version>
    <gitflow-maven-plugin.version>1.19.0</gitflow-maven-plugin.version>
    <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
    <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
    <maven-javadoc-plugin.version>3.4.1</maven-javadoc-plugin.version>
    <maven-release-plugin.version>3.0.0-M6</maven-release-plugin.version>
    <maven-replacer-plugin.version>1.5.3</maven-replacer-plugin.version>
    <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
    <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
    <sonar-maven-plugin.version>3.9.1.2184</sonar-maven-plugin.version>
    <sortpom-maven-plugin.version>3.2.1</sortpom-maven-plugin.version>
    <spotless-maven-plugin.version>2.36.0</spotless-maven-plugin.version>

    <node.version>v16.15.1</node.version>
    <npm.version>8.11.0</npm.version>

    <sonar.projectName>arq-spring-boot-3</sonar.projectName>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <!-- Import dependency management from Spring Boot -->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        <version>${springdoc-openapi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-common</artifactId>
        <version>${springdoc-openapi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.xnio</groupId>
        <artifactId>xnio-api</artifactId>
        <version>${xnio.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.xnio</groupId>
        <artifactId>xnio-nio</artifactId>
        <version>${xnio.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.threads</groupId>
        <artifactId>jboss-threads</artifactId>
        <version>${jboss-threads.version}</version>
      </dependency>
      <dependency>
        <groupId>org.javasimon</groupId>
        <artifactId>javasimon-core</artifactId>
        <version>${javasimon.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-beanutils</groupId>
        <artifactId>commons-beanutils</artifactId>
        <version>${commons-beanutils.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct-processor</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${swagger-annotations.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi</artifactId>
        <version>${poi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml</artifactId>
        <version>${poi.version}</version>
      </dependency>
      <dependency>
        <groupId>net.logstash.logback</groupId>
        <artifactId>logstash-logback-encoder</artifactId>
        <version>${logstash-logback-encoder.version}</version>
      </dependency>
      <dependency>
        <groupId>org.openapitools</groupId>
        <artifactId>jackson-databind-nullable</artifactId>
        <version>${jackson-databind-nullable.version}</version>
      </dependency>
      <dependency>
        <groupId>org.zalando</groupId>
        <artifactId>problem</artifactId>
        <version>${problem.version}</version>
      </dependency>
      <dependency>
        <groupId>org.zalando</groupId>
        <artifactId>logbook-spring-boot-starter</artifactId>
        <version>${logbook.version}</version>
      </dependency>
      <dependency>
        <groupId>org.zalando</groupId>
        <artifactId>problem-spring-web</artifactId>
        <version>${problem-spring-web.version}</version>
      </dependency>
      <dependency>
        <groupId>org.zalando</groupId>
        <artifactId>problem-gson</artifactId>
        <version>${problem.version}</version>
      </dependency>
      <dependency>
        <groupId>org.zalando</groupId>
        <artifactId>jackson-datatype-problem</artifactId>
        <version>${problem.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bitbucket.b_c</groupId>
        <artifactId>jose4j</artifactId>
        <version>${jose4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>${snakeyaml.version}</version>
      </dependency>
      <dependency>
        <groupId>io.hypersistence</groupId>
        <artifactId>hypersistence-utils-hibernate-62</artifactId>
        <version>${hypersistence-utils-hibernate-62.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate.orm</groupId>
        <artifactId>hibernate-core</artifactId>
        <version>${hibernate.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate.orm</groupId>
        <artifactId>hibernate-jcache</artifactId>
        <version>${hibernate.version}</version>
      </dependency>

      <!-- Custom starters with pre-configured components -->

      <dependency>
        <groupId>org.assentsoftware</groupId>
        <artifactId>dkt-fitness-rest-services-commons</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>org.assentsoftware</groupId>
        <artifactId>dkt-fitness-boot-starter-rest-components</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>org.assentsoftware</groupId>
        <artifactId>dkt-fitness-boot-starter-openapi</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>org.assentsoftware</groupId>
        <artifactId>dkt-fitness-boot-starter-externalized-properties</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>org.assentsoftware</groupId>
        <artifactId>dkt-fitness-boot-starter-security-oauth2</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>org.assentsoftware</groupId>
        <artifactId>dkt-fitness-boot-starter-jpa-postgresql</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>org.assentsoftware</groupId>
        <artifactId>dkt-fitness-boot-starter-logging-support</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>org.assentsoftware</groupId>
        <artifactId>dkt-fitness-boot-starter-cloud-support</artifactId>
        <version>${revision}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <version>${spring-boot.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>com.vaadin.external.google</groupId>
            <artifactId>android-json</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.assentsoftware</groupId>
        <artifactId>dkt-fitness-boot-starter-security-oauth2-test</artifactId>
        <version>${revision}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.github.javafaker</groupId>
        <artifactId>javafaker</artifactId>
        <version>${javafaker.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.github.meanbeanlib</groupId>
        <artifactId>meanbean</artifactId>
        <version>${meanbean.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.playtika.testcontainers</groupId>
        <artifactId>embedded-postgresql</artifactId>
        <version>${embedded-postgresql.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>${h2.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>${flatten-maven-plugin.version}</version>
          <configuration>
            <updatePomFile>true</updatePomFile>
            <flattenMode>resolveCiFriendliesOnly</flattenMode>
          </configuration>
          <executions>
            <execution>
              <id>flatten</id>
              <goals>
                <goal>flatten</goal>
              </goals>
              <phase>process-resources</phase>
            </execution>
            <execution>
              <id>flatten.clean</id>
              <goals>
                <goal>clean</goal>
              </goals>
              <phase>clean</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <source>${java.version}</source>
            <target>${java.version}</target>
            <annotationProcessorPaths>
              <path>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-mapstruct-binding</artifactId>
                <version>${lombok-mapstruct-binding.version}</version>
              </path>
              <path>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
              </path>
              <path>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
              </path>
            </annotationProcessorPaths>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.amashchenko.maven.plugin</groupId>
          <artifactId>gitflow-maven-plugin</artifactId>
          <version>${gitflow-maven-plugin.version}</version>
          <configuration>
            <verbose>true</verbose>

            <gitFlowConfig>
              <productionBranch>master</productionBranch>
              <developmentBranch>develop</developmentBranch>
              <featureBranchPrefix>feature/</featureBranchPrefix>
              <releaseBranchPrefix>release/</releaseBranchPrefix>
              <hotfixBranchPrefix>hotfix/</hotfixBranchPrefix>
            </gitFlowConfig>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${build-helper-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>add-source</id>
              <goals>
                <goal>add-source</goal>
              </goals>
              <phase>generate-sources</phase>
              <configuration>
                <sources>
                  <source>${project.build.directory}/generated-sources/annotations/</source>
                  <source>${project.build.directory}/generated-sources/openapi/src/main/java/</source>
                </sources>
              </configuration>
            </execution>
            <execution>
              <id>add-test-source</id>
              <goals>
                <goal>add-test-source</goal>
              </goals>
              <phase>generate-test-sources</phase>
              <configuration>
                <sources>
                  <source>${project.build.directory}/generated-test-sources/contracts/</source>
                </sources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <configuration>
            <argLine>${surefireArgLine} -Duser.language=es -Duser.region=ES -Duser.timezone=UTC</argLine>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven-failsafe-plugin.version}</version>
          <configuration>
            <argLine>${failsafeArgLine} -Duser.language=es -Duser.region=ES -Duser.timezone=UTC</argLine>
          </configuration>
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
              <phase>integration-test</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>pre-unit-test</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <propertyName>surefireArgLine</propertyName>
              </configuration>
            </execution>
            <execution>
              <id>report</id>
              <goals>
                <goal>report</goal>
              </goals>
              <phase>prepare-package</phase>
            </execution>
            <execution>
              <id>post-unit-test</id>
              <goals>
                <goal>report</goal>
              </goals>
              <phase>test</phase>
            </execution>

            <!-- Integration test coverage -->
            <execution>
              <id>pre-integration-test</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <phase>pre-integration-test</phase>
              <configuration>
                <propertyName>failsafeArgLine</propertyName>
              </configuration>
            </execution>
            <execution>
              <id>post-integration-test</id>
              <goals>
                <goal>report</goal>
              </goals>
              <phase>post-integration-test</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar-maven-plugin.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>sonar</goal>
              </goals>
              <phase>verify</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin.version}</version>
          <configuration>
            <javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
          </configuration>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>
              <configuration>
                <doclint>none</doclint>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${maven-release-plugin.version}</version>
          <configuration>
            <tagNameFormat>v@{project.version}</tagNameFormat>
            <autoVersionSubmodules>true</autoVersionSubmodules>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>${frontend-maven-plugin.version}</version>
          <configuration>
            <installDirectory>root</installDirectory>
            <workingDirectory>src/main/ui</workingDirectory>
          </configuration>
          <executions>
            <execution>
              <id>install node and npm</id>
              <goals>
                <goal>install-node-and-npm</goal>
              </goals>
              <configuration>
                <nodeVersion>${node.version}</nodeVersion>
                <npmVersion>${npm.version}</npmVersion>
              </configuration>
            </execution>
            <execution>
              <id>npm install</id>
              <goals>
                <goal>npm</goal>
              </goals>
            </execution>
            <execution>
              <id>prod build</id>
              <goals>
                <goal>npm</goal>
              </goals>
              <phase>generate-resources</phase>
              <configuration>
                <arguments>run build</arguments>
                <npmInheritsProxyConfigFromMaven>false</npmInheritsProxyConfigFromMaven>
              </configuration>
            </execution>
            <execution>
              <id>gulp build</id>
              <goals>
                <goal>gulp</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>${spotless-maven-plugin.version}</version>
          <configuration>
            <formats>
              <format>
                <!-- define the files to apply to -->
                <includes>
                  <include>*.md</include>
                  <include>.gitignore</include>
                </includes>
                <!-- define the steps to apply to those files -->
                <trimTrailingWhitespace></trimTrailingWhitespace>
                <endWithNewline></endWithNewline>
                <indent>
                  <tabs>true</tabs>
                  <spacesPerTab>4</spacesPerTab>
                </indent>
              </format>
            </formats>
            <java>
              <removeUnusedImports></removeUnusedImports>

              <!-- apply a specific flavor of google-java-format -->
              <googleJavaFormat>
                <version>1.11.0</version>
                <style>AOSP</style>
              </googleJavaFormat>

              <licenseHeader>
                <content>/* Decathlon (C)$YEAR */</content>
              </licenseHeader>
            </java>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>apply</goal>
              </goals>
              <phase>process-sources</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.github.ekryd.sortpom</groupId>
          <artifactId>sortpom-maven-plugin</artifactId>
          <version>${sortpom-maven-plugin.version}</version>
          <configuration>
            <sortDependencies>scope</sortDependencies>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>sort</goal>
              </goals>
              <phase>process-sources</phase>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.github.ekryd.sortpom</groupId>
        <artifactId>sortpom-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
</project>
