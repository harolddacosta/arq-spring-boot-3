/* Decathlon (C)2023 */
package com.decathlon.data.domain;
// Generated 10 jul. 2021 0:09:56 by Hibernate Tools 3.2.2.GA and Assent Architecture

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;
import jakarta.persistence.Version;

import lombok.*;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.springframework.data.annotation.CreatedBy;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedBy;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import java.time.LocalDate;
import java.time.LocalDateTime;

/** Persona generated by hbm2java */
@Entity
@EntityListeners({AuditingEntityListener.class})
@Table(
        name = "persona",
        schema = "public",
        uniqueConstraints = {
            @UniqueConstraint(columnNames = {"cedula_persona"}),
            @UniqueConstraint(columnNames = {"codigo_persona"}),
            @UniqueConstraint(columnNames = {"numero_msas"})
        })
@ToString(onlyExplicitlyIncluded = true)
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
@NoArgsConstructor
@Getter
@Setter
public class Persona implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    @GenericGenerator(
            name = "persona_seq_gen",
            strategy = "org.hibernate.id.enhanced.SequenceStyleGenerator",
            parameters = {
                @Parameter(name = "sequence_name", value = "persona_id_seq"),
                @Parameter(name = "initial_value", value = "1"),
                @Parameter(name = "increment_size", value = "1")
            })
    @GeneratedValue(generator = "persona_seq_gen")
    @Id
    @Column(name = "id", unique = true, nullable = false)
    @EqualsAndHashCode.Include
    @ToString.Include
    public Long id;

    @Version
    @Column(name = "version")
    @EqualsAndHashCode.Include
    @ToString.Include
    public Long version;

    @Column(name = "codigo_persona", nullable = false, length = 16)
    public String codigoPersona;

    @Column(name = "cedula_persona", nullable = false, length = 64)
    public String cedulaPersona;

    @Column(name = "nombre_persona", nullable = false, length = 64)
    public String nombrePersona;

    @Column(name = "apellido_persona", length = 64)
    public String apellidoPersona;

    @Column(name = "rif_persona", length = 64)
    public String rifPersona;

    @Column(name = "numero_msas")
    public String numeroMsas;

    @Column(name = "fecha_nacimiento_persona", length = 13)
    public LocalDate fechaNacimientoPersona;

    @Column(name = "fecha_defuncion_persona", length = 13)
    public LocalDate fechaDefuncionPersona;

    @Column(name = "fecha_vencimiento_rif", length = 13)
    public LocalDate fechaVencimientoRif;

    @Column(name = "telefono_movil_persona", length = 32)
    public String telefonoMovilPersona;

    @Column(name = "telefono_fijo_persona", nullable = false, length = 32)
    public String telefonoFijoPersona;

    @Column(name = "e_mail_persona", length = 64)
    public String eMailPersona;

    @Column(name = "direccion_persona", nullable = false)
    public String direccionPersona;

    @Column(name = "nombre_contacto_uno", length = 64)
    public String nombreContactoUno;

    @Column(name = "telefono_contacto_uno", length = 32)
    public String telefonoContactoUno;

    @Column(name = "telefono_movil_contacto_uno", length = 32)
    public String telefonoMovilContactoUno;

    @Column(name = "email_contacto_uno", length = 64)
    public String emailContactoUno;

    @Column(name = "parentesco_contacto_uno")
    public String parentescoContactoUno;

    @Column(name = "nombre_contacto_dos", length = 64)
    public String nombreContactoDos;

    @Column(name = "telefono_contacto_dos", length = 32)
    public String telefonoContactoDos;

    @Column(name = "telefono_movil_contacto_dos", length = 32)
    public String telefonoMovilContactoDos;

    @Column(name = "email_contacto_dos", length = 64)
    public String emailContactoDos;

    @Column(name = "parentesco_contacto_dos")
    public String parentescoContactoDos;

    @Column(name = "edad", precision = 8)
    public Float edad;

    @Column(name = "url1")
    public String url1;

    @Column(name = "url1_file_name")
    public String url1FileName;

    @Column(name = "url1_file_size", precision = 17)
    public Double url1FileSize;

    @Column(name = "comentarios_adicionales")
    public String comentariosAdicionales;

    @Column(name = "nombre_doctor_referencia")
    public String nombreDoctorReferencia;

    @Column(name = "telefono_contacto_doctor_referencia", length = 32)
    public String telefonoContactoDoctorReferencia;

    @Column(name = "telefono_movil_doctor_referencia", length = 32)
    public String telefonoMovilDoctorReferencia;

    @Column(name = "email_doctor_referencia", length = 64)
    public String emailDoctorReferencia;

    @Column(name = "lugar_nacimiento_otro", length = 128)
    public String lugarNacimientoOtro;

    @Column(name = "direccion_persona_calle_avenida")
    public String direccionPersonaCalleAvenida;

    @Column(name = "direccion_persona_edificio")
    public String direccionPersonaEdificio;

    @Column(name = "direccion_persona_consultorio")
    public String direccionPersonaConsultorio;

    @CreatedBy
    @Column(name = "usuario_creacion")
    public String createdBy;

    @CreatedDate
    @Column(name = "fecha_creacion")
    public LocalDateTime createdDate;

    @LastModifiedBy
    @Column(name = "usuario_modificacion")
    public String lastModifiedBy;

    @LastModifiedDate
    @Column(name = "fecha_modificacion")
    public LocalDateTime lastModifiedDate;
}
