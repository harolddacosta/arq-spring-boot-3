/* AssentSoftware (C)2023 */
package com.decathlon.data.controller;

import com.decathlon.data.dto.PersonDto;
import com.decathlon.data.manager.PersonService;
import com.decathlon.data.mappers.PersonMapper;

import jakarta.validation.Valid;

import lombok.RequiredArgsConstructor;

import org.springframework.http.HttpStatus;
import org.springframework.orm.ObjectOptimisticLockingFailureException;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/api/v1/persons")
@RequiredArgsConstructor
public class SimpleController {

    private final PersonMapper personMapper;
    private final PersonService personService;

    @PostMapping
    @ResponseStatus(HttpStatus.CREATED)
    public PersonDto save(@RequestBody @Valid PersonDto dto) {
        return personMapper.fromEntityToDto(
                personService.save(personMapper.fromDtoToEntityForSave(dto)));
    }

    @PutMapping
    @ResponseStatus(HttpStatus.CREATED)
    public PersonDto update(@RequestBody @Valid PersonDto dto) {
        throw new ObjectOptimisticLockingFailureException(PersonDto.class, 1l);
    }

    @PostMapping("/code-not-autogenerated")
    @ResponseStatus(HttpStatus.CREATED)
    public PersonDto saveCodeNotAutoGenerated(@RequestBody @Valid PersonDto dto) {
        return personMapper.fromEntityToDto(
                personService.saveCodeNotAutoGenerated(personMapper.fromDtoToEntityForSave(dto)));
    }

    @GetMapping("/{id}")
    @ResponseStatus(HttpStatus.OK)
    public PersonDto getPersonById(@PathVariable("id") Long id) {
        return personMapper.fromEntityToDto(personService.getById(id));
    }
}
